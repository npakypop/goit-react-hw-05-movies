{"version":3,"file":"static/js/387.a19d2525.chunk.js","mappings":"iPAEaA,EAAOC,EAAAA,GAAAA,GAAH,uGAMJC,EAAQD,EAAAA,GAAAA,GAAH,yC,SC4BlB,EA/Ba,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GACVO,KAAKH,GACLI,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACT,KAGF,iCACE,wCACA,SAACH,EAAD,UACGM,EAAOS,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,GAAIC,EAArB,EAAqBA,KAArB,OACV,UAAChB,EAAD,WACGc,GACC,gBACEG,IAAG,yCAAoCH,GACvCI,IAAKF,KAGP,gBAAKC,IAAI,iBAAiBC,IAAKF,KAEjC,wBAAKA,MATKD,EADF,QAgBnB,C,+LCjCDI,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACpBC,QAAS,oCAGN,IAAMC,EAAiB,mCAAG,sGACNF,EAAAA,EAAAA,IAAU,sBAAuB,CACpDG,OAAQ,CAAEC,KAAM,KAFS,uBACrBC,EADqB,EACrBA,KAGRb,QAAQC,IAAIY,GAJiB,kBAKtBA,GALsB,2CAAH,qDAQjBC,EAAe,mCAAG,WAAOC,GAAP,yFACJP,EAAAA,EAAAA,IAAU,gBAAiB,CAC9CG,OAAQ,CAAGI,MAAAA,KAFY,uBACnBF,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,sDAOfG,EAAY,mCAAG,WAAOZ,GAAP,yFACDI,EAAAA,EAAAA,IAAA,iBAAoBJ,GAAM,CAC7CO,OAAQ,CAAEP,GAAAA,KAFU,uBAChBS,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,sDAMZjB,EAAY,mCAAG,WAAOQ,GAAP,yFACDI,EAAAA,EAAAA,IAAA,iBAAoBJ,EAApB,YAAkC,CACrDO,OAAQ,CAAEP,GAAAA,KAFU,uBAChBS,EADgB,EAChBA,KAGRb,QAAQC,IAAIY,GAJY,kBAKjBA,EAAKI,MALY,2CAAH,sDAQZC,EAAc,mCAAE,WAAOd,GAAP,yFACFI,EAAAA,EAAAA,IAAA,iBAAoBJ,EAApB,YAAkC,CACrDO,OAAQ,CAAEP,GAAAA,KAFW,uBACjBS,EADiB,EACjBA,KADiB,kBAIlBA,EAAKM,SAJa,2CAAF,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: start;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\nexport const Actor = styled.li`\n  width: 100px;\n`;\n// export const Form = styled.form``;\n","import { getMovieCast } from 'services/Api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { List, Actor } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n\n  useEffect(() => {\n    getMovieCast(movieId)\n      .then(setActors)\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <>\n      <h3>Actor team</h3>\n      <List>\n        {actors.map(({ profile_path, id, name }) => (\n          <Actor key={id}>\n            {profile_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                alt={name}\n              />\n            ) : (\n              <img src=\"../img/img.png\" alt={name} />\n            )}\n            <h4>{name}</h4>\n          </Actor>\n        ))}\n      </List>\n    </>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key: \"a86899d726d6982dbed218ba90f0207b\",\n}\n\nexport const getTrendingMovies = async() => {\n    const { data } = await axios.get('/trending/movie/day', {\n        params: { page: 1, },\n    });\n    console.log(data);\n    return data;\n}\n\nexport const getMovieByQuery = async (query) => {\n    const { data } = await axios.get('/search/movie', {\n        params: {  query },\n    })\n    return data;\n}\n\nexport const getMovieById = async (id) => {\n    const { data } = await axios.get(`/movie/${id}`, {\n        params: { id },\n    })\n    return data;\n}\nexport const getMovieCast = async (id) => {\n    const { data } = await axios.get(`/movie/${id}/credits`, {\n        params: { id },\n    })\n    console.log(data);\n    return data.cast;\n\n}\nexport const getMovieReview= async (id) => {\n    const { data } = await axios.get(`/movie/${id}/reviews`, {\n        params: { id },\n    })\n    return data.results;\n}"],"names":["List","styled","Actor","movieId","useParams","useState","actors","setActors","useEffect","getMovieCast","then","catch","error","console","log","map","profile_path","id","name","src","alt","axios","api_key","getTrendingMovies","params","page","data","getMovieByQuery","query","getMovieById","cast","getMovieReview","results"],"sourceRoot":""}