{"version":3,"file":"static/js/415.af42ffe7.chunk.js","mappings":"sNAEaA,EAAOC,EAAAA,GAAAA,GAAH,yLAUJC,EAAWD,EAAAA,GAAAA,IAAH,wGAKRE,EAAYF,EAAAA,GAAAA,GAAH,gGAOTG,GAHOH,EAAAA,GAAAA,EAAH,6CAGKA,EAAAA,GAAAA,OAAH,qK,SCrBNI,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACR,EAAD,UACGM,EAAOG,KACN,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAkBC,GAA5B,EAAcC,aAAd,EAA4BD,MAAsBE,GAAlD,EAAkCC,eAAlC,EAAkDD,aAAlD,OACE,UAACX,EAAD,YACE,gBACEa,IAAG,yCAAoCF,GACvCG,IAAKP,EACLQ,MAAO,OAET,UAAChB,EAAD,YACE,wBAAKQ,GAAgBE,KAErB,SAAC,KAAD,CAAMO,GAAE,kBAAaR,GAAMS,MAAO,CAAEC,KAAMd,GAA1C,UACE,SAACH,EAAD,+BAVUO,EADlB,KAmBP,C,6ECLD,UAjBa,WACX,OAA4BW,EAAAA,EAAAA,UAAS,IAArC,eAAOhB,EAAP,KAAeiB,EAAf,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPJ,EAAUI,EACX,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,KAGD,+BACE,SAAC,IAAD,CAAWvB,OAAQA,KAGxB,C,+LCnBD0B,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACpBC,QAAS,oCAGN,IAAMR,EAAiB,mCAAG,sGACNO,EAAAA,EAAAA,IAAU,sBAAuB,CACpDE,OAAQ,CAAEC,KAAM,KAFS,uBACrBC,EADqB,EACrBA,KAGRN,QAAQC,IAAIK,GAJiB,kBAKtBA,GALsB,2CAAH,qDAQjBC,EAAe,mCAAG,WAAOC,GAAP,yFACJN,EAAAA,EAAAA,IAAU,gBAAiB,CAC9CE,OAAQ,CAAGI,MAAAA,KAFY,uBACnBF,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,sDAOfG,EAAY,mCAAG,WAAO5B,GAAP,yFACDqB,EAAAA,EAAAA,IAAA,iBAAoBrB,GAAM,CAC7CuB,OAAQ,CAAEvB,GAAAA,KAFU,uBAChByB,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,sDAMZI,EAAY,mCAAG,WAAO7B,GAAP,yFACDqB,EAAAA,EAAAA,IAAA,iBAAoBrB,EAApB,YAAkC,CACrDuB,OAAQ,CAAEvB,GAAAA,KAFU,uBAChByB,EADgB,EAChBA,KAGRN,QAAQC,IAAIK,GAJY,kBAKjBA,EAAKK,MALY,2CAAH,sDAQZC,EAAc,mCAAE,WAAO/B,GAAP,yFACFqB,EAAAA,EAAAA,IAAA,iBAAoBrB,EAApB,YAAkC,CACrDuB,OAAQ,CAAEvB,GAAAA,KAFW,uBACjByB,EADiB,EACjBA,KADiB,kBAIlBA,EAAKT,SAJa,2CAAF,qD","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0 auto;\n  margin-top: 40px;\n  list-style: none;\n  padding-left: 0;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 40px;\n`;\nexport const WrapInfo = styled.div`\n  border-top: solid 1px #808080;\n  text-align: center;\n  padding: 20px 10px;\n`;\nexport const MovieItem = styled.li`\n  box-shadow: 0px 0px 5px 2px rgba(0, 0, 0, 0.3);\n  max-width: 300px;\n`;\nexport const Date = styled.p`\n  margin-top: 20px;\n`;\nexport const Button = styled.button`\n  margin-top: 20px;\n  padding: 10px 30px;\n  cursor: pointer;\n  text-align: center;\n  background-color: orange;\n  border-radius: 10px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { List, MovieItem, WrapInfo, Button } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(\n        ({ title, id, release_date, name, first_air_date, poster_path }) => (\n          <MovieItem key={id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={title}\n              width={300}\n            />\n            <WrapInfo>\n              <h4>{title ? title : name}</h4>\n\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <Button>More Info</Button>\n              </Link>\n            </WrapInfo>\n          </MovieItem>\n        )\n      )}\n    </List>\n  );\n};\n","// import { TrendMovies } from '../components/TrendMovies/TrendMovies'\nimport { MovieList } from '../components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'services/Api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovies()\n      .then(({ results }) => {\n        setMovies(results);\n      })\n      .catch(error => console.log(error));\n  }, []);\n\n  return (\n    <>\n      <MovieList movies={movies} />\n    </>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key: \"a86899d726d6982dbed218ba90f0207b\",\n}\n\nexport const getTrendingMovies = async() => {\n    const { data } = await axios.get('/trending/movie/day', {\n        params: { page: 1, },\n    });\n    console.log(data);\n    return data;\n}\n\nexport const getMovieByQuery = async (query) => {\n    const { data } = await axios.get('/search/movie', {\n        params: {  query },\n    })\n    return data;\n}\n\nexport const getMovieById = async (id) => {\n    const { data } = await axios.get(`/movie/${id}`, {\n        params: { id },\n    })\n    return data;\n}\nexport const getMovieCast = async (id) => {\n    const { data } = await axios.get(`/movie/${id}/credits`, {\n        params: { id },\n    })\n    console.log(data);\n    return data.cast;\n\n}\nexport const getMovieReview= async (id) => {\n    const { data } = await axios.get(`/movie/${id}/reviews`, {\n        params: { id },\n    })\n    return data.results;\n}"],"names":["List","styled","WrapInfo","MovieItem","Button","MovieList","movies","location","useLocation","map","title","id","name","release_date","poster_path","first_air_date","src","alt","width","to","state","from","useState","setMovies","useEffect","getTrendingMovies","then","results","catch","error","console","log","axios","api_key","params","page","data","getMovieByQuery","query","getMovieById","getMovieCast","cast","getMovieReview"],"sourceRoot":""}